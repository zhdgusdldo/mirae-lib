plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
}

group = 'com.mirae'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	 maven {
	 	url 'http://localhost:8081/artifactory'
	 	allowInsecureProtocol = true
	 	credentials {
	 		username = 'admin'
	 		password = 'asdfasdfa'
	 	}
	 }
}

ext {
	set('springCloudVersion', "2022.0.3")
}

// springd-data-redis webflux, superacid, microtx가 모두 netty를 다른버전을 사용하므로 가장최신버전을 사용하는 superACID로 맞춤.
configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details -> 
		if (details.requested.group == 'io.netty') {
			details.useVersion '4.1.112.Final'
		}
	}
}

 
dependencies {
	// boot
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	
	// 대응개발 이벤트서비스
	// 대응개발의 poi 와 springdoc 사이에서 apache commons lang 버전 충돌발생함
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:10.1.24'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:2.0.0'
    	implementation 'commons-io:commons-io:2.16.1'
	implementation 'commons-codec:commons-codec:1.17.0'
	implementation 'com.google.zxing:core:3.5.3'
    	implementation 'org.apache.poi:poi:5.2.5'
	implementation 'org.apache.poi:poi-ooxml-schemas:4.1.2'
	implementation 'org.apache.poi:poi-ooxml:5.2.5'
	implementation 'jakarta.mail:jakarta.mail-api:2.1.3'
	implementation 'com.sun.mail:jakarta.mail:2.0.1'
    
	//Cache
	//redis client
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.17.1'
	implementation 'io.github.microutils:kotlin-logging:1.12.0'
	implementation 'org.assertj:assertj-core:3.3.0'
	implementation 'org.mockito:mockito-all:1.10.19'
	implementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	runtimeOnly 'org.jetbrains.kotlin:kotlin-reflect:2.0.0'
	
	//Spring config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-kafka'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	
	//Spring Doc
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
		
	// mybatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2'
	implementation 'com.github.pagehelper:pagehelper-spring-boot-starter:2.1.0'
	
	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	
	// 모니터링
	implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter'
	
	// test
	testImplementation 'org.instancio:instancio-junit:5.0.2'
	
	// http Clinet
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.3'
	
	//logging
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
	
	// Kafka
	implementation 'org.springframework.kafka:spring-kafka:3.1.1'
	testImplementation 'org.springframework.kafka:spring-kafka-test:3.1.1'
	
	//lombok
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
	testImplementation 'org.projectlombok:lombok:1.18.30'
	
	// object Mapping
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation 'org.modelmapper:modelmapper:3.2.0'
	
	// Database Driver
	implementation 'com.mysql:mysql-connector-j:8.2.0'
	implementation 'org.postgresql:postgresql:42.7.2'
	implementation 'com.oracle.database.jdbc:ojdbc11:23.4.0.24.05'
	
	// 2PC MicroTx
	implementation 'com.oracle.microtx:microtx-spring-boot-starter-hibernate:24.2.1'
	implementation 'com.oracle.microtx:microtx-spring-boot-starter:24.2.1'
	
	// 2PC SuperACID
	implementation 'org.jboss.marshalling:jboss-marshalling:2.1.4.Final'
	implementation 'org.jboss.marshalling:jboss-marshalling-serial:2.1.4.Final'
    
    
	implementation 'com.github.jsqlparser:jsqlparser:4.6'

	// ignite와 opentelemetry 와 jetbrains-annotation 버전 충돌발생함
	implementation 'org.jetbrains:annotations:13.0'
    implementation('org.apache.ignite:ignite-core:2.16.0') {
        exclude group: 'org.apache.ignite', module: 'ignite-indexing'
    }

    implementation 'org.apache.commons:commons-lang3:3.15.0' 
    implementation 'com.google.guava:guava:33.2.1-jre'
    implementation 'io.netty:netty-all:4.1.112.Final'
	implementation 'io.netty:netty-transport-native-epoll:4.1.112.Final'
	
	//
	runtimeOnly 'com.h2database:h2:2.1.214'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom("io.opentelemetry:opentelemetry-bom:1.35.0")
    	mavenBom("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha:2.1.0-alpha")
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
